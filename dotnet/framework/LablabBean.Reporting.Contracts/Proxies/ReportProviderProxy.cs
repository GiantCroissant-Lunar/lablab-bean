using LablabBean.Plugins.Contracts;
using LablabBean.Plugins.Contracts.Attributes;
using LablabBean.Reporting.Contracts.Contracts;

namespace LablabBean.Reporting.Contracts.Proxies;

/// <summary>
/// Proxy implementation of IReportProvider that delegates to the plugin registry.
/// The actual implementation is generated by the ProxyServiceGenerator.
/// Returns the highest priority provider (typically used for single provider scenarios).
/// For multi-provider scenarios, use IRegistry.GetAll&lt;IReportProvider&gt;() directly.
/// </summary>
[RealizeService(typeof(IReportProvider))]
[SelectionStrategy(SelectionMode.HighestPriority)]
public partial class ReportProviderProxy : IReportProvider
{
    private readonly IRegistry _registry;

    public ReportProviderProxy(IRegistry registry)
    {
        _registry = registry ?? throw new System.ArgumentNullException(nameof(registry));
    }
}
