version: '3'

vars:
  PY: python

tasks:
  venv:create:
    desc: Create virtual environment at .venv
    cmds:
      - "{{.PY}} -m venv .venv"
    status:
      - test -d .venv

  install:
    desc: Install deps via pip (requirements.txt if present)
    deps: [venv:create]
    cmds:
      - "{{.PY}} -m pip install --upgrade pip"
      - |
        if [ -f requirements.txt ]; then \
          {{.PY}} -m pip install -r requirements.txt; \
        else \
          echo "No requirements.txt; skipping"; \
        fi

  lint:
    desc: Ruff lint (and fix)
    cmds:
      - ruff check --fix .

  format:
    desc: Black format
    cmds:
      - black .

  test:
    desc: Run pytest if present
    cmds:
      - |
        if [ -f pytest.ini ] || [ -f pyproject.toml ] || rg -q "def test_" -g "**/*.py"; then \
          pytest -q; \
        else \
          echo "No tests detected"; \
        fi

  precommit:install:
    desc: Install pre-commit hook
    cmds:
      - pre-commit install

  hub:sync:
    desc: Sync assets from lunar-snake-hub
    cmds:
      - |
        echo "🔄 Syncing from lunar-snake-hub..."

        # Clone or update hub repo in cache
        if [ ! -d .hub-cache/hub-repo ]; then
          git clone https://github.com/GiantCroissant-Lunar/lunar-snake-hub .hub-cache/hub-repo
        else
          git -C .hub-cache/hub-repo pull
        fi

        # Sync assets to .hub-cache/
        mkdir -p .hub-cache/agents .hub-cache/nuke

        cp -r .hub-cache/hub-repo/agents/* .hub-cache/agents/
        cp -r .hub-cache/hub-repo/nuke/* .hub-cache/nuke/

        # Create symlink for backward compat (Windows: use junction)
        if [ ! -L .agent ] && [ ! -d .agent ]; then
          # Create new symlink/junction
          ln -s .hub-cache/agents .agent 2>/dev/null || cmd /c mklink /J .agent .hub-cache\\agents
        fi

        echo "✅ Hub sync complete"
        echo "   Agents: $(find .hub-cache/agents -name '*.md' | wc -l) files"
        echo "   NUKE: $(find .hub-cache/nuke -name '*.cs' | wc -l) files"

  hub:check:
    desc: Verify hub cache is fresh
    cmds:
      - |
        if [ ! -d .hub-cache/agents ]; then
          echo "❌ Hub cache not found. Run 'task hub:sync' first"
          exit 1
        fi
        echo "✅ Hub cache present"
        echo "   Location: .hub-cache/"
        echo "   Agents: $(find .hub-cache/agents -name '*.md' 2>/dev/null | wc -l) files"

  hub:clean:
    desc: Remove hub cache (force fresh sync)
    cmds:
      - rm -rf .hub-cache .agent
      - echo "✅ Hub cache cleaned. Run 'task hub:sync' to re-fetch"

