version: '3'

tasks:
  build:
    desc: Build using NUKE default target (Compile)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1

  build:console:
    desc: Build console app via NUKE (Compile)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Compile --configuration Debug

  build:windows:
    desc: Build Windows app via NUKE (PublishWindows or Compile if configured)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target PublishWindows --configuration Debug

  build:restore:
    desc: Restore via NUKE
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Restore

  publish:
    desc: Publish console and windows apps into build/_artifacts/<version>/publish
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target PublishAll --configuration Debug

  nuget:pack:
    desc: Build, pack and sync NuGet packages into versioned artifacts and local feed
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target SyncNugetLocal --configuration Release

  run:media-player:
    desc: Run the media player from versioned artifact
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File run-media-player.ps1 {{.CLI_ARGS}}

  release:
    desc: Full release packaging (includes website copy; may require website build)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Release --configuration Release

  build:artifacts:
    desc: Compile then publish (shortcut for build + publish)
    cmds:
    - task: build
    - task: publish

  test:
    desc: Run all tests via NUKE
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Test --configuration Debug

  test:coverage:
    desc: Run tests with code coverage
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target TestWithCoverage --configuration Debug

  reports:
    desc: Generate HTML and CSV reports (builds, session, plugin metrics)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target GenerateReports --configuration Debug

  reports:ci:
    desc: Run tests with coverage and generate all reports (full CI workflow)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target TestWithCoverage --configuration Debug
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target GenerateReports --configuration Debug

  clean:
    desc: Clean all build artifacts via NUKE
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Clean

  scc:
    desc: Run scc (code counter) on the repository
    cmds:
    - scc .

  docs:organize:
    desc: Analyze documentation organization (dry-run)
    cmds:
    - python git-hooks/checks/python/organize_docs.py --dry-run

  docs:organize:auto:
    desc: Automatically organize scattered documentation files
    cmds:
    - python git-hooks/checks/python/organize_docs.py --auto-move

  docs:validate:
    desc: Validate documentation schema and generate registry
    cmds:
    - python scripts/validate_docs.py

  docs:check:
    desc: Check documentation organization and validation
    cmds:
    - task: docs:organize
    - task: docs:validate

  docs:status:
    desc: Quick status of documentation organization (no validation)
    cmds:
    - python git-hooks/checks/python/organize_docs.py --dry-run

  dotnet:format:
    desc: Format .NET code using dotnet format
    dir: dotnet
    cmds:
    - dotnet format

  dotnet:analyze:
    desc: Analyze .NET code using Roslynator
    dir: dotnet
    cmds:
    - dotnet roslynator analyze --severity-level info

  dotnet:fix:
    desc: Fix .NET code issues using Roslynator
    dir: dotnet
    cmds:
    - dotnet roslynator fix

  dotnet:check:
    desc: Run both format check and Roslynator analysis
    cmds:
    - task: dotnet:format
    - task: dotnet:analyze

  format:
    desc: Format code via NUKE (dotnet-format + optional ReSharper)
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Format --configuration Debug

  format:check:
    desc: Verify formatting (no changes) via NUKE
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target FormatCheck --configuration Debug

  analyze:
    desc: Run analyzer fixes and build via NUKE
    cmds:
    - pwsh -NoProfile -ExecutionPolicy Bypass -File build/nuke/build.ps1 --target Analyze --configuration Debug
